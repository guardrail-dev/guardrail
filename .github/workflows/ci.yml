name: CI

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
  workflow_dispatch: {}

jobs:
  core:
    name: Run core tests
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        java: [ '1.14' ]
        scala: [
            { version: '2.12.18', bincompat: '2.12' }
          ]
    outputs:
      scala_versions: ${{ steps.set-scala-versions.outputs.scala_versions }}
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
    - uses: olafurpg/setup-scala@v14
      with:
        java-version: zulu@${{ matrix.java }}
    - name: Set scala version for matrix
      id: set-scala-versions  # The greps on the following line are to ensure as much as possible that we've caught the right line
      run: echo "scala_versions=$(sbt 'print githubMatrixSettings' | grep '^\[{' | grep 'bincompat' | tail -n 1)" >> $GITHUB_OUTPUT
    - name: print Java version
      run: java -version
    - uses: actions/cache@v4
      with:
        path: ~/.cache/coursier
        key: ${{ runner.os }}-scala-${{ matrix.scala.version }}-${{ hashFiles('**/*.sbt') }}
        restore-keys: |
          ${{ runner.os }}-scala-${{ matrix.scala.version }}-
    - name: Run tests
      run:  sbt ++${{ matrix.scala.version }} 'show stableVersion' clean samples/clean checkFormatting coverage test coverageAggregate versionPolicyCheck microsite/compile
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        GUARDRAIL_CI: true
    - uses: codecov/codecov-action@c16abc29c95fcf9174b58eb7e1abf4c866893bc8 # 4.1.1
      with:
        file: ./target/scala-${{ matrix.scala.bincompat }}/scoverage-report/scoverage.xml
        fail_ci_if_error: true
        verbose: true
        token: ${{ secrets.CODECOV_TOKEN }}
  java:
    runs-on: ubuntu-20.04
    needs: [core]
    strategy:
      matrix:
        java: [ '1.14', '1.17' ]
        scala: [
            { version: '2.12.16', bincompat: '2.12' }
          ]
        framework: [
            { framework: 'dropwizard',         project: 'sample-dropwizard'     },
            { framework: 'dropwizard-vavr',    project: 'sample-dropwizardVavr' },
            { framework: 'spring-mvc',         project: 'sample-springMvc'      }
          ]
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
    - uses: olafurpg/setup-scala@v14
      with:
        java-version: zulu@${{ matrix.java }}
    - name: print Java version
      run: java -version
    - uses: actions/cache@v4
      with:
        path: ~/.cache/coursier
        key: ${{ runner.os }}-scala-${{ matrix.scala.version }}-${{ hashFiles('**/*.sbt') }}
        restore-keys: |
          ${{ runner.os }}-scala-${{ matrix.scala.version }}-
    - name: Run tests
      run:  sbt ++${{ matrix.scala.version }} clean samples/clean coverage "runExample java ${{ matrix.framework.framework }}" ${{ matrix.framework.project }}/test coverageAggregate
    - uses: codecov/codecov-action@c16abc29c95fcf9174b58eb7e1abf4c866893bc8 # 4.1.1
      with:
        file: ./target/scala-${{ matrix.scala.bincompat }}/scoverage-report/scoverage.xml
        fail_ci_if_error: true
        token: ${{ secrets.CODECOV_TOKEN }}
  scala:
    runs-on: ubuntu-20.04
    needs: [core]
    strategy:
      matrix:
        java: [ '1.14', '1.17' ]
        scala: ${{ fromJson(needs.core.outputs.scala_versions) }}
        framework: [
            { framework: 'akka-http',         project: 'sample-akkaHttp'        },
            { framework: 'http4s',            project: 'sample-http4s'          },
            { framework: 'http4s-v0.22',      project: 'sample-http4s-v0_22'     },
            { framework: 'akka-http-jackson', project: 'sample-akkaHttpJackson' },
            { framework: 'dropwizard',        project: 'sample-dropwizardScala' }
          ]
    steps:
    - run: echo 'combo_enabled=true' >> $GITHUB_ENV
    - run: echo 'combo_enabled=false' >> $GITHUB_ENV
      if: ${{ matrix.java == '1.17' && matrix.scala.bincompat == '2.12' }}
    - run: echo 'combo_enabled=false' >> $GITHUB_ENV
      if: matrix.scala.bincompat == '2.13' && matrix.framework.framework == 'dropwizard'
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
    - uses: olafurpg/setup-scala@v14
      with:
        java-version: zulu@${{ matrix.java }}
    - name: print Java version
      run: java -version
    - uses: actions/cache@v4
      with:
        path: ~/.cache/coursier
        key: ${{ runner.os }}-scala-${{ matrix.scala.version }}-${{ hashFiles('**/*.sbt') }}
        restore-keys: |
          ${{ runner.os }}-scala-${{ matrix.scala.version }}-
    - name: Run tests
      if: ${{ env.combo_enabled == 'true' }}
      run:  sbt ++${{ matrix.scala.version }} clean samples/clean coverage "runExample scala ${{ matrix.framework.framework }}" ${{ matrix.framework.project }}/test coverageAggregate
    - uses: codecov/codecov-action@c16abc29c95fcf9174b58eb7e1abf4c866893bc8 # 4.1.1
      if: ${{ env.combo_enabled == 'true' }}
      with:
        file: ./target/scala-${{ matrix.scala.bincompat }}/scoverage-report/scoverage.xml
        fail_ci_if_error: true
        token: ${{ secrets.CODECOV_TOKEN }}
